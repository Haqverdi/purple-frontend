{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nconst Context = /*#__PURE__*/React.createContext();\n\nclass Provider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      perPage: 2,\n      currentPage: 1,\n      currentType: \"hamısı\",\n      sortedData: null,\n      pagesSorted: null,\n      navActive: \"Home\",\n      sortData: (data, e) => {\n        let type = e.target.innerHTML.toLowerCase();\n        this.setState({\n          currentType: type\n        });\n        let perPage = 2;\n        let pagesSorted = [];\n\n        if (type == \"hamısı\") {\n          for (let i = 1; i <= Math.ceil(data.length / perPage); i++) {\n            pagesSorted.push(i);\n          }\n\n          this.setState({\n            sortedData: data\n          });\n        } else {\n          let sortedData = [];\n\n          for (let i = 0; i < data.length; i++) {\n            if (data[i].category.name == type) {\n              sortedData.push(data[i]);\n            }\n          }\n\n          for (let i = 1; i <= Math.ceil(sortedData.length / perPage); i++) {\n            pagesSorted.push(i);\n          }\n\n          this.setState({\n            sortedData: sortedData\n          });\n        }\n\n        this.setState({\n          pagesSorted: pagesSorted\n        });\n        this.setState({\n          currentPage: 1\n        });\n      },\n      changePage: e => {\n        this.setState({\n          currentPage: e\n        });\n      },\n      changeUrl: e => {\n        this.setState({\n          currentPage: 1,\n          currentType: \"hamısı\",\n          sortedData: null,\n          pagesSorted: null\n        });\n\n        if (e.target.innerHTML == \"Home\") {\n          this.setState({\n            navActive: null\n          });\n        } else {\n          this.setState({\n            navActive: e.target.innerHTML\n          });\n        }\n      },\n      showMap: () => {\n        document.querySelector(\"#popup-map\").classList.remove(\"display-none\");\n      },\n      basketItems: null,\n      basketCount: null,\n      basketTotal: null,\n      showBasket: () => {\n        let basketItems = [];\n        let basket = document.querySelector(\".basket\");\n\n        if (basket.classList.contains(\"display-block\")) {\n          return basket.classList.remove(\"display-block\");\n        } else {\n          var decodedCookie = decodeURIComponent(document.cookie);\n          var cookies = decodedCookie.split(\"; \");\n\n          if (cookies[0].slice(3, 7) != \"http\") {\n            this.setState({\n              basketCount: null\n            });\n            return basket.classList.add(\"display-block\");\n          }\n\n          let basketTotal = 0;\n\n          for (let i = 0; i < cookies.length; i++) {\n            cookies[i] = cookies[i].split(\"=\")[0];\n            let arr = [];\n            arr.push(cookies[i].split(\", \")[0]);\n            arr.push(cookies[i].split(\", \")[1]);\n            arr.push(cookies[i].split(\", \")[2]);\n            arr.push(cookies[i].split(\", \")[3]);\n            arr.push(cookies[i].split(\", \")[4]);\n            arr.push(cookies[i].split(\", \")[5]);\n            arr.push(cookies[i].split(\", \")[6]);\n            basketItems.push(arr);\n            basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n          }\n\n          basketTotal = parseFloat(basketTotal).toFixed(2);\n          this.setState({\n            basketCount: cookies.length\n          });\n          this.setState({\n            basketItems: basketItems\n          });\n          this.setState({\n            basketTotal: basketTotal\n          });\n          basket.classList.add(\"display-block\");\n        }\n      },\n      changeBasket: (e, item) => {\n        console.log(item);\n        console.log(e.target.value);\n        var days = 30;\n        var d = new Date();\n        d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);\n        var expires = \"expires=\" + d.toUTCString();\n        document.cookie = `${item[0]}, ${item[1]}, ${item[2]}, ${item[3]}, ${item[4]}, ${item[5]}, ${item[6]}` + \"=\" + \"added to shop cart\" + \";\" + \"expires=Thu, 01 Jan 1970 00:00:01 GMT\" + \";path=/\";\n        let total = (parseFloat(e.target.value) * parseFloat(item[3])).toFixed(2);\n        document.cookie = `${item[0]}, ${item[1]}, ${item[2]}, ${item[3]}, ${e.target.value}, ${total}, ${item[6]}` + \"=\" + \"added to shop cart\" + \";\" + expires + \";path=/\";\n        let basketItems = [];\n        let basket = document.querySelector(\".basket\");\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \");\n\n        if (cookies[0].slice(2, 7) == \"http\") {\n          return basket.classList.add(\"display-block\");\n        }\n\n        let basketTotal = 0;\n\n        for (let i = 0; i < cookies.length; i++) {\n          cookies[i] = cookies[i].split(\"=\")[0];\n          let arr = [];\n          arr.push(cookies[i].split(\", \")[0]);\n          arr.push(cookies[i].split(\", \")[1]);\n          arr.push(cookies[i].split(\", \")[2]);\n          arr.push(cookies[i].split(\", \")[3]);\n          arr.push(cookies[i].split(\", \")[4]);\n          arr.push(cookies[i].split(\", \")[5]);\n          arr.push(cookies[i].split(\", \")[6]);\n          basketItems.push(arr);\n          basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n        }\n\n        basketTotal = parseFloat(basketTotal).toFixed(2);\n        this.setState({\n          basketCount: cookies.length\n        });\n        this.setState({\n          basketItems: basketItems\n        });\n        this.setState({\n          basketTotal: basketTotal\n        });\n      },\n      deleteBasket: (e, item) => {\n        let basket = document.querySelector(\".basket\");\n        let tr = e.target.closest(\"tr\");\n        let item4 = tr.querySelector(\".product_select\").value;\n        document.cookie = `${item[0]}, ${item[1]}, ${item[2]}, ${item[3]}, ${item4}, ${item[5]}, ${item[6]}` + \"=\" + \"added to shop cart\" + \";\" + \"expires=Thu, 01 Jan 1970 00:00:01 GMT\" + \";path=/\";\n        let basketItems = [];\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \");\n        let basketTotal = 0;\n\n        for (let i = 0; i < cookies.length; i++) {\n          cookies[i] = cookies[i].split(\"=\")[0];\n          let arr = [];\n          arr.push(cookies[i].split(\", \")[0]);\n          arr.push(cookies[i].split(\", \")[1]);\n          arr.push(cookies[i].split(\", \")[2]);\n          arr.push(cookies[i].split(\", \")[3]);\n          arr.push(cookies[i].split(\", \")[4]);\n          arr.push(cookies[i].split(\", \")[5]);\n          arr.push(cookies[i].split(\", \")[6]);\n          basketItems.push(arr);\n          basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n        }\n\n        basketTotal = parseFloat(basketTotal).toFixed(2);\n\n        if (basketItems[0][0] == \"\") {\n          this.setState({\n            basketCount: null\n          });\n          this.setState({\n            basketItems: null\n          });\n          this.setState({\n            basketTotal: null\n          });\n        } else {\n          this.setState({\n            basketCount: cookies.length\n          });\n          this.setState({\n            basketItems: basketItems\n          });\n          this.setState({\n            basketTotal: basketTotal\n          });\n        }\n      },\n      addCart: (item, type) => {\n        let basket = document.querySelector(\".basket\");\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \");\n\n        for (let i = 0; i < cookies.length; i++) {\n          cookies[i] = cookies[i].split(\"=\")[0];\n          cookies[i] = cookies[i].split(\", \")[2];\n        }\n\n        if (cookies.indexOf(item.name) == -1) {\n          if (basket.classList.contains(\"display-block\")) {\n            basket.classList.remove(\"display-block\");\n          }\n\n          var days = 30;\n          var d = new Date();\n          d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);\n          var expires = \"expires=\" + d.toUTCString();\n\n          if (item.image) {\n            var src = item.image;\n          } else {\n            var src = \"img/cake-feature/c-feature-9.jpg\";\n          }\n\n          if (item.discount) {\n            var price = item.discount;\n          } else {\n            var price = item.price;\n          }\n\n          document.cookie = // `${type}/${item.id}, ${src}, ${item.name}, ${price}, 1, ${item.price}` +\n          `${item.id}, ${src}, ${item.name}, ${price}, 1, ${price}, ${type}` + \"=\" + \"added to shop cart\" + \";\" + expires + \";path=/\";\n        } else {\n          alert(\"Bu məhsul artıq səbətə əlavə edilmişdir\");\n        }\n\n        let basketItems = [];\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \");\n\n        if (cookies[0].slice(3, 7) != \"http\") {\n          return basket.classList.add(\"display-block\");\n        }\n\n        let basketTotal = 0;\n\n        for (let i = 0; i < cookies.length; i++) {\n          cookies[i] = cookies[i].split(\"=\")[0];\n          let arr = [];\n          arr.push(cookies[i].split(\", \")[0]);\n          arr.push(cookies[i].split(\", \")[1]);\n          arr.push(cookies[i].split(\", \")[2]);\n          arr.push(cookies[i].split(\", \")[3]);\n          arr.push(cookies[i].split(\", \")[4]);\n          arr.push(cookies[i].split(\", \")[5]);\n          arr.push(cookies[i].split(\", \")[6]);\n          basketItems.push(arr);\n          basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n        }\n\n        basketTotal = parseFloat(basketTotal).toFixed(2);\n        this.setState({\n          basketCount: cookies.length\n        });\n        this.setState({\n          basketItems: basketItems\n        });\n        this.setState({\n          basketTotal: basketTotal\n        });\n        basket.classList.add(\"display-block\");\n      },\n      getBasketItems: () => {\n        let basketItems = [];\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var cookies = decodedCookie.split(\"; \");\n\n        if (cookies[0].slice(3, 7) != \"http\") {\n          return this.setState({\n            basketItems: basketItems\n          });\n        }\n\n        let basketTotal = 0;\n\n        for (let i = 0; i < cookies.length; i++) {\n          cookies[i] = cookies[i].split(\"=\")[0];\n          let arr = [];\n          arr.push(cookies[i].split(\", \")[0]);\n          arr.push(cookies[i].split(\", \")[1]);\n          arr.push(cookies[i].split(\", \")[2]);\n          arr.push(cookies[i].split(\", \")[3]);\n          arr.push(cookies[i].split(\", \")[4]);\n          arr.push(cookies[i].split(\", \")[5]);\n          arr.push(cookies[i].split(\", \")[6]);\n          basketItems.push(arr);\n          basketTotal += parseFloat(cookies[i].split(\", \")[5]);\n        }\n\n        basketTotal = parseFloat(basketTotal).toFixed(2);\n        this.setState({\n          basketCount: cookies.length\n        });\n        this.setState({\n          basketItems: basketItems\n        });\n        this.setState({\n          basketTotal: basketTotal\n        });\n      },\n      input: {\n        name: null,\n        surname: null,\n        city: null,\n        adress: null,\n        adress2: null,\n        email: null,\n        number: null,\n        note: null\n      },\n      query: \"?\",\n      postOrderForm: () => {\n        console.log(\"post: \");\n        console.log(\"_\", this.state.query);\n      },\n      inputHandler: e => {\n        const {\n          name,\n          value\n        } = e.target;\n        console.log(\"name: \", name);\n        console.log(\"value: \", value);\n\n        let formInput = _objectSpread({}, this.state.input);\n\n        switch (name) {\n          case \"name\":\n            if (value) {\n              if (this.state.query.indexOf(`${name}=${this.state.input.name}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.name}&`, \"\") + `${name}=` + value + \"&\"\n                });\n              } else {\n                this.setState({\n                  query: this.state.query + `${name}=` + value + \"&\"\n                });\n              }\n            } else {\n              if (this.state.query.indexOf(`${name}=${this.state.input.name}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.name}&`, \"\")\n                });\n              }\n            }\n\n            formInput.name = value;\n            break;\n\n          case \"surname\":\n            if (value) {\n              if (this.state.query.indexOf(`${name}=${this.state.input.surname}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.surname}&`, \"\") + `${name}=` + value + \"&\"\n                });\n              } else {\n                this.setState({\n                  query: this.state.query + `${name}=` + value + \"&\"\n                });\n              }\n            } else {\n              if (this.state.query.indexOf(`${name}=${this.state.input.surname}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.surname}&`, \"\")\n                });\n              }\n            }\n\n            formInput.surname = value;\n            break;\n\n          case \"city\":\n            if (value) {\n              if (this.state.query.indexOf(`${name}=${this.state.input.city}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.city}&`, \"\") + `${name}=` + value + \"&\"\n                });\n              } else {\n                this.setState({\n                  query: this.state.query + `${name}=` + value + \"&\"\n                });\n              }\n            } else {\n              if (this.state.query.indexOf(`${name}=${this.state.input.city}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.city}&`, \"\")\n                });\n              }\n            }\n\n            formInput.city = value;\n            break;\n\n          case \"adress\":\n            if (value) {\n              if (this.state.query.indexOf(`${name}=${this.state.input.adress}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.adress}&`, \"\") + `${name}=` + value + \"&\"\n                });\n              } else {\n                this.setState({\n                  query: this.state.query + `${name}=` + value + \"&\"\n                });\n              }\n            } else {\n              if (this.state.query.indexOf(`${name}=${this.state.input.adress}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.adress}&`, \"\")\n                });\n              }\n            }\n\n            formInput.adress = value;\n            break;\n\n          case \"adress2\":\n            if (value) {\n              if (this.state.query.indexOf(`${name}=${this.state.input.adress2}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.adress2}&`, \"\") + `${name}=` + value + \"&\"\n                });\n              } else {\n                this.setState({\n                  query: this.state.query + `${name}=` + value + \"&\"\n                });\n              }\n            } else {\n              if (this.state.query.indexOf(`${name}=${this.state.input.adress2}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.adress2}&`, \"\")\n                });\n              }\n            }\n\n            formInput.adress2 = value;\n            break;\n\n          case \"email\":\n            if (value) {\n              if (this.state.query.indexOf(`${name}=${this.state.input.email}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.email}&`, \"\") + `${name}=` + value + \"&\"\n                });\n              } else {\n                this.setState({\n                  query: this.state.query + `${name}=` + value + \"&\"\n                });\n              }\n            } else {\n              if (this.state.query.indexOf(`${name}=${this.state.input.email}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.email}&`, \"\")\n                });\n              }\n            }\n\n            formInput.email = value;\n            break;\n\n          case \"phone\":\n            if (value) {\n              if (this.state.query.indexOf(`${name}=${this.state.input.phone}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.phone}&`, \"\") + `${name}=` + value + \"&\"\n                });\n              } else {\n                this.setState({\n                  query: this.state.query + `${name}=` + value + \"&\"\n                });\n              }\n            } else {\n              if (this.state.query.indexOf(`${name}=${this.state.input.phone}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.phone}&`, \"\")\n                });\n              }\n            }\n\n            formInput.phone = value;\n            break;\n\n          case \"note\":\n            if (value) {\n              if (this.state.query.indexOf(`${name}=${this.state.input.note}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.note}&`, \"\") + `${name}=` + value + \"&\"\n                });\n              } else {\n                this.setState({\n                  query: this.state.query + `${name}=` + value + \"&\"\n                });\n              }\n            } else {\n              if (this.state.query.indexOf(`${name}=${this.state.input.note}&`) != -1) {\n                this.setState({\n                  query: this.state.query.replace(`${name}=${this.state.input.note}&`, \"\")\n                });\n              }\n            }\n\n            formInput.note = value;\n            break;\n        }\n\n        this.setState({\n          input: formInput\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Context.Provider, {\n      value: {\n        state: this.state\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst Consumer = Context.Consumer;\nexport default Provider;\nexport { Consumer }; // let trow = `\n//         <tr>\n//         <td>\n//         <img src=\"/img/product/cart-img.jpg\" alt=\"\" />\n//         </td>\n//         <td id=\"basket-name\">${item.name}</td>\n//         <td class=\"basket-price\">${item.price}</td>\n//         <td>\n//         <select class=\"product_select\">\n//         <option data-display=\"1\">1</option>\n//         <option value=\"2\">2</option>\n//         <option value=\"3\">3</option>\n//         <option value=\"4\">4</option>\n//         <option value=\"5\">5</option>\n//         </select>\n//         </td>\n//         <td class=\"basket-total\">${item.price}</td>\n//         <td>\n//         <i class=\"fa fa-close\"/>\n//         </td>\n//         </tr>\n//     `;","map":null,"metadata":{},"sourceType":"module"}